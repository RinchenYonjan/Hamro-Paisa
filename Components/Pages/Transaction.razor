@page "/transaction"
@inject IDialogService DialogService
@inject IPaisaService PaisaService

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My MAUI App</title>
    <link rel="stylesheet" href="style.css">
</head>

<body>

    <div class="user-section">

        <div class="search-bar">
            <form action="/search" method="get">
                <input type="search" name="query" placeholder="Search here..." required>
                <MudButton Class= "SearchButton" @onclick="Search" Variant="Variant.Filled" Color="Color.Primary">Search</MudButton>
            </form>
        </div>

        <!-- Top Button containers -->
        <div class="button-container">
            <MudButton @onclick="OpenTransactionDialog" Variant="Variant.Filled" Color="Color.Primary">Add</MudButton>
            <MudButton @onclick="Sort" Variant="Variant.Filled" Color="Color.Primary">Sort</MudButton>
            <MudButton @onclick="AscendingOrder" Variant="Variant.Filled" Color="Color.Primary">Ascending</MudButton>
            <MudButton @onclick="DescendingOrder" Variant="Variant.Filled" Color="Color.Primary">Decending</MudButton>
        </div>

    </div>

    <!-- List container -->
    <div class="unique-container">
        <div class="unqiue-list">
            <h3>Recent Transaction</h3>
            <ul>
                @foreach (var transaction in paisamodel)
                {
                    <li class="transaction-item">
                        <span>@transaction.Description</span>&nbsp;
                        <span>@transaction.Date.ToString("yyyy-MM-dd")</span>&nbsp;
                        <span>@transaction.Amount.ToString()</span>&nbsp;
                        <span class="@(transaction.Type == "Income" ? "text-success" : "text-danger")">@transaction.Type</span>
                    </li>
                }
            </ul>
        </div>
    </div>

</body>
</html>


@code {

    // Declaring list
    List<PaisaModel> paisamodel = new List<PaisaModel>();



    // Search Button event
    private void Search()
    {

    }



    private async Task OpenTransactionDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var dialog = await DialogService.ShowAsync<TransactionDialog>("Transaction Dialog", options);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            paisamodel = (List<PaisaModel>)PaisaService.GetAllPaisa();
        }
    }


    // Sort button event
    private void Sort()
    {

    }


    // AscendingOrder button event
    private void AscendingOrder()
    {
        //DAta line ani tesko data lai call garera .OrderBy(x => x.name or other by titles) Ascending Order Ma
        // Data.OrderByDescending(x => x.name or other by titles)) DEscending Oreder MA
    }


    //DescendingOrder button event
    private void DescendingOrder()
    {

    }


}
